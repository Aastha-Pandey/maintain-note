{"version":3,"sources":["components/Login.js","components/Menu.js","components/Logout.js","components/header/TopNavigationBar.js","components/LabelMenu.js","components/BottomNoteCardMenu.js","components/NoteCard.js","components/svgElements.js","components/side/SideNavigationBar.js","components/TextArea.js","components/Notes.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","isLoggedIn","setIsLoggedIn","userId","setUserId","profilePicture","setProfilePicture","userName","setUserName","userEmailId","setUserEmailId","responseGoogle","response","a","console","log","axios","method","url","tokenId","res","profileObj","imageUrl","email","name","data","to","pathname","state","userid","status","image","className","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Menu","bottomMenuVisible","setBottomMenuVisible","menuItems","updateNoteStatus","ellipsesClicked","setElipsesClicked","addOrChangeLabelClicked","setAddOrChangeLabelClicked","showSettingsMenu","setShowSettingsMenu","setNoteClicked","setTitle","setNote","note","noteClicked","setTheme","React","useContext","TextAreaContext","map","item","onClick","Logout","setIsLoggedOut","user","UserContext","alt","src","onLogoutSuccess","TopNavigationBar","setTextAreaClicked","theme","list","setList","sideNavigationBarVisible","setSideNavigationBarVisible","isLoggedOut","render","attrs","placement","focusable","viewBox","d","xmlns","fill","stroke","disabled","placeholder","mutate","strokeLinecap","strokeLinejoin","strokeWidth","offset","trigger","interactive","onHidden","popperOptions","modifiers","options","fallbackPlacements","altAxis","tether","class","LabelMenu","updateNoteLabel","setTextAreaLabel","suggestions","setSuggestions","showCreateLabel","setShowCreateLabel","type","onChange","event","target","value","every","includes","checked","_id","BottomNoteCardMenu","oneNote","textClicked","uniqueLabel","label","tag","put","delete","preserveAspectRatio","NoteCard","setNoteid","noteid","title","noteSvg","width","height","reminderSvg","archiveSvg","trashSvg","labelSvg","SideNavigationBar","useParams","svgElements","tabName","tabNameIndex","activeStyle","fontWeight","backgroundColor","svg","svgIndex","sort","TextArea","tClicked","position","textArealabel","location","useLocation","setTextClicked","dateString","updatedAt","Date","toUTCString","split","slice","join","useEffect","rows","cols","autoFocus","post","createContext","Notes","notes","useSWR","get","then","refreshInterval","setUniqueLabel","Set","filter","Boolean","Provider","noteIndex","Routes","basename","exact","path","App","textAreaClicked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ee174c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState();\r\n  const [userId, setUserId] = useState();\r\n  const [profilePicture, setProfilePicture] = useState();\r\n  const [userName, setUserName] = useState();\r\n  const [userEmailId, setUserEmailId] = useState();\r\n\r\n  const responseGoogle = async (response) => {\r\n    console.log(response);\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `/user/${response.tokenId}`,\r\n    });\r\n\r\n    setProfilePicture(response.profileObj.imageUrl);\r\n    setUserEmailId(response.profileObj.email);\r\n    setUserName(response.profileObj.name);\r\n    setUserId(res.data);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <Redirect\r\n            to={{\r\n              pathname: `/note`,\r\n              state: {\r\n                userid: userId,\r\n                status: 'note',\r\n                image: profilePicture,\r\n                name: userName,\r\n                email: userEmailId,\r\n              },\r\n            }}\r\n          ></Redirect>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className='flex justify-center items-center h-screen'>\r\n            <GoogleLogin\r\n              clientId='1090448541256-p94hg4259rj6fmcvolkc90fte0he5sgd.apps.googleusercontent.com'\r\n              buttonText='Login with google'\r\n              onSuccess={responseGoogle}\r\n              onFailure={responseGoogle}\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { TextAreaContext } from '../App';\r\n\r\nconst Menu = ({\r\n  bottomMenuVisible,\r\n  setBottomMenuVisible,\r\n  menuItems,\r\n  updateNoteStatus,\r\n  ellipsesClicked,\r\n  setElipsesClicked,\r\n  addOrChangeLabelClicked,\r\n  setAddOrChangeLabelClicked,\r\n  showSettingsMenu,\r\n  setShowSettingsMenu,\r\n  setNoteClicked,\r\n  setTitle,\r\n  setNote,\r\n  note,\r\n  noteClicked,\r\n}) => {\r\n  const { setTheme } = React.useContext(TextAreaContext);\r\n\r\n  return (\r\n    <>\r\n      <div className={`flex flex-col  border   bg-white  w-44 rounded-md dark:bg-gray-900   z-20`}>\r\n        <div className='my-2 '>\r\n          {menuItems.map(\r\n            (item) =>\r\n              item !== null && (\r\n                <button\r\n                  onClick={() => {\r\n                    if (note && item === 'Delete note') {\r\n                      updateNoteStatus('trash');\r\n                      if (noteClicked) {\r\n                        setNoteClicked(false);\r\n                        setTitle();\r\n                        setNote();\r\n                      }\r\n\r\n                      setBottomMenuVisible(!bottomMenuVisible);\r\n                      setElipsesClicked(!ellipsesClicked);\r\n                    }\r\n                    if (item === 'Change labels' || item === 'Add label') {\r\n                      setAddOrChangeLabelClicked(!addOrChangeLabelClicked);\r\n                    }\r\n                    if (item === 'Enable dark theme') {\r\n                      setTheme('dark');\r\n                      setShowSettingsMenu(!showSettingsMenu);\r\n                    }\r\n                    if (item === 'Disable dark theme') {\r\n                      setTheme();\r\n                      setShowSettingsMenu(!showSettingsMenu);\r\n                    }\r\n                  }}\r\n                  className={\r\n                    item === 'Delete note' ||\r\n                    item === 'Change labels' ||\r\n                    item === 'Add label' ||\r\n                    item === 'Enable dark theme' ||\r\n                    item === 'Disable dark theme'\r\n                      ? 'py-2 px-4 text-sm visible text-left text-gray-600 dark:text-gray-200  hover:bg-gray-200 w-full dark:hover:bg-gray-600'\r\n                      : 'py-2 px-4 text-sm visible text-left text-gray-400 dark:text-gray-700  hover:bg-gray-200 w-full dark:hover:bg-gray-600'\r\n                  }\r\n                >\r\n                  {item}\r\n                </button>\r\n              )\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\n\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { UserContext } from './Notes';\r\n\r\nconst Logout = ({ setIsLoggedOut }) => {\r\n  const { user } = React.useContext(UserContext);\r\n\r\n  const logout = () => {\r\n    setIsLoggedOut(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='flex flex-col  py-8 px-10 space-y-4 shadow-lg border rounded-md bg-white dark:bg-gray-900'>\r\n        <div className='flex flex-col space-y-4'>\r\n          <div className='flex items-center justify-center'>\r\n            <img\r\n              alt='profile'\r\n              className=' hover:shadow-lg rounded-full h-20 w-20 flex items-center justify-center...'\r\n              src={user.image}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <div className=' font-semibold flex items-center justify-center dark:text-gray-200'>\r\n              {user.name}\r\n            </div>\r\n            <div className='flex items-center justify-center text-gray-600 dark:text-gray-200'>\r\n              {user.email}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <GoogleLogout\r\n          clientId='1090448541256-p94hg4259rj6fmcvolkc90fte0he5sgd.apps.googleusercontent.com'\r\n          buttonText='Sign out'\r\n          onLogoutSuccess={logout}\r\n        ></GoogleLogout>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useState } from 'react';\r\nimport { mutate } from 'swr';\r\nimport { useLocation, Redirect } from 'react-router-dom';\r\nimport { TextAreaContext } from '../../App';\r\nimport Menu from './../Menu';\r\nimport Tippy from '@tippyjs/react/headless';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport 'tippy.js/themes/light.css';\r\nimport Logout from '../Logout';\r\nimport { UserContext } from '../Notes';\r\n\r\nconst TopNavigationBar = () => {\r\n  const { user } = React.useContext(UserContext);\r\n  const {\r\n    setTextAreaClicked,\r\n    theme,\r\n    status,\r\n    list,\r\n    setList,\r\n    sideNavigationBarVisible,\r\n    setSideNavigationBarVisible,\r\n  } = React.useContext(TextAreaContext);\r\n\r\n  const [isLoggedOut, setIsLoggedOut] = useState();\r\n\r\n  const menuItems = [\r\n    'Settings',\r\n    theme === 'dark' ? 'Disable dark theme' : 'Enable dark theme',\r\n    'Send feedback',\r\n    'Help',\r\n    'App downloads',\r\n    'Keyboard shortcuts',\r\n  ];\r\n  const [showSettingsMenu, setShowSettingsMenu] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        className='bg-white border border-b border-gray-300 w-full h-16 flex justify-around fixed  inset-x-0 top-0 z-40 dark:bg-gray-900 '\r\n        onClick={() => {\r\n          setTextAreaClicked(false);\r\n        }}\r\n      >\r\n        <div className='flex space-x-2'>\r\n          <button\r\n            onClick={() => {\r\n              setSideNavigationBarVisible(!sideNavigationBarVisible);\r\n            }}\r\n          >\r\n            <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n              <Tippy\r\n                render={(attrs) => (\r\n                  <div className='bg-gray-700 px-1 rounded-sm text-white text-sm'>Main menu</div>\r\n                )}\r\n                placement='bottom'\r\n              >\r\n                <svg\r\n                  focusable='false'\r\n                  viewBox='0 0 24 24'\r\n                  className='self-center w-6 h-6 fill-current text-gray-600 dark:text-gray-200 focus:outline-none'\r\n                >\r\n                  <path d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z'></path>\r\n                </svg>\r\n              </Tippy>\r\n            </div>\r\n          </button>\r\n          <div className='mt-2'>\r\n            <img src='favicon.ico' alt=''></img>\r\n          </div>\r\n\r\n          <div className='self-center dark:text-gray-200 text-gray-600 text-lg font-semibold'>\r\n            Maintain\r\n          </div>\r\n        </div>\r\n        <div className='flex  justify-around w-screen md:w-2/4 lg:w-2/4 px-8 dark:bg-gray-900 '>\r\n          <div className=' flex my-2 rounded-md bg-gray-100 w-full dark:bg-gray-700 px-2 space-x-4'>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              className='h-5 w-5 self-center stroke-current text-gray-600 dark:text-gray-200 focus:outline-none'\r\n              fill='none'\r\n              viewBox='0 0 24 24'\r\n              stroke='currentColor'\r\n            >\r\n              <path\r\n                stroke-linecap='round'\r\n                stroke-linejoin='round'\r\n                stroke-width='2'\r\n                d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'\r\n              />\r\n            </svg>\r\n\r\n            <input\r\n              disabled\r\n              placeholder='Search'\r\n              className={` focus:outline-none  bg-gray-100 w-full dark:bg-gray-700 placeholder-gray-600 dark:text-gray-200 dark:placeholder-gray-200`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='flex space-x-6'>\r\n          <button\r\n            onClick={() => {\r\n              mutate(status);\r\n              mutate('label');\r\n            }}\r\n          >\r\n            <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n              <Tippy\r\n                render={(attrs) => (\r\n                  <div className='bg-gray-700 px-1 rounded-sm text-white text-sm'>Refresh</div>\r\n                )}\r\n                placement='bottom'\r\n              >\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  className='h-6 w-6 self-center stroke-current text-gray-600 dark:text-gray-200 focus:outline-none'\r\n                  fill='none'\r\n                  viewBox='0 0 24 24'\r\n                  stroke='currentColor'\r\n                >\r\n                  <path\r\n                    strokeLinecap='round'\r\n                    strokeLinejoin='round'\r\n                    strokeWidth={2}\r\n                    d='M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15'\r\n                  />\r\n                </svg>\r\n              </Tippy>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setList(!list);\r\n            }}\r\n          >\r\n            {list ? (\r\n              <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n                <Tippy\r\n                  render={(attrs) => (\r\n                    <div className='bg-gray-700 px-1 rounded-sm text-white text-sm'>Grid view</div>\r\n                  )}\r\n                  placement='bottom'\r\n                >\r\n                  <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    className='h-6 w-6 self-center stroke-current text-gray-600 dark:text-gray-200 focus:outline-none'\r\n                    fill='none'\r\n                    viewBox='0 0 24 24'\r\n                    stroke='currentColor'\r\n                  >\r\n                    <path\r\n                      stroke-linecap='round'\r\n                      stroke-linejoin='round'\r\n                      stroke-width='2'\r\n                      d='M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z'\r\n                    />\r\n                  </svg>\r\n                </Tippy>\r\n              </div>\r\n            ) : (\r\n              <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n                <Tippy\r\n                  render={(attrs) => (\r\n                    <div className='bg-gray-700 px-1 rounded-sm text-white text-sm'>List view</div>\r\n                  )}\r\n                  placement='bottom'\r\n                >\r\n                  <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    className='h-6 w-6 self-center stroke-current text-gray-600 dark:text-gray-200 focus:outline-none'\r\n                    fill='none'\r\n                    viewBox='0 0 24 24'\r\n                    stroke='currentColor'\r\n                  >\r\n                    <path\r\n                      strokeLinecap='round'\r\n                      strokeLinejoin='round'\r\n                      strokeWidth={2}\r\n                      d='M4 6h16M4 10h16M4 14h16M4 18h16'\r\n                    />\r\n                  </svg>\r\n                </Tippy>\r\n              </div>\r\n            )}\r\n          </button>\r\n\r\n          <button>\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700 px-1 rounded-sm text-white text-sm'>Settings</div>\r\n              )}\r\n              offset={[0, 3]}\r\n              placement='bottom'\r\n            >\r\n              <Tippy\r\n                render={(attrs) => {\r\n                  return (\r\n                    <Menu\r\n                      {...attrs}\r\n                      menuItems={menuItems}\r\n                      showSettingsMenu={showSettingsMenu}\r\n                      setShowSettingsMenu={setShowSettingsMenu}\r\n                    />\r\n                  );\r\n                }}\r\n                offset={[0, 20]}\r\n                trigger='click'\r\n                interactive='true'\r\n                placement='bottom'\r\n                disabled={showSettingsMenu}\r\n                onHidden={() => {\r\n                  setShowSettingsMenu(false);\r\n                }}\r\n                popperOptions={{\r\n                  modifiers: [\r\n                    {\r\n                      // padding: 0,\r\n\r\n                      name: 'flip',\r\n                      options: {\r\n                        fallbackPlacements: ['top', 'right'],\r\n                      },\r\n                    },\r\n                    {\r\n                      name: 'preventOverflow',\r\n                      options: {\r\n                        altAxis: true,\r\n                        tether: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                }}\r\n              >\r\n                <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n                  <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    class='h-6 w-6 self-center stroke-current text-gray-600 dark:text-gray-200 focus:outline-none'\r\n                    fill='none'\r\n                    viewBox='0 0 24 24'\r\n                    stroke='currentColor'\r\n                  >\r\n                    <path\r\n                      stroke-linecap='round'\r\n                      stroke-linejoin='round'\r\n                      stroke-width='2'\r\n                      d='M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z'\r\n                    />\r\n                    <path\r\n                      stroke-linecap='round'\r\n                      stroke-linejoin='round'\r\n                      stroke-width='2'\r\n                      d='M15 12a3 3 0 11-6 0 3 3 0 016 0z'\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </Tippy>\r\n            </Tippy>\r\n          </button>\r\n        </div>\r\n        {isLoggedOut ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: `/`,\r\n            }}\r\n          ></Redirect>\r\n        ) : (\r\n          <Tippy\r\n            render={(attrs) => {\r\n              return (\r\n                <>\r\n                  <div className='flex flex-col bg-gray-800 text-gray-50 w-40 rounded-md text-sm text-left px-2'>\r\n                    <div>Google Account</div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.email}</div>\r\n                  </div>\r\n                </>\r\n              );\r\n            }}\r\n            placement='bottom'\r\n          >\r\n            <Tippy\r\n              render={(attrs) => {\r\n                return (\r\n                  <>\r\n                    <Logout setIsLoggedOut={setIsLoggedOut} />\r\n                  </>\r\n                );\r\n              }}\r\n              interactive='true'\r\n              trigger='click'\r\n            >\r\n              <button className=' flex items-center justify-center... '>\r\n                <img\r\n                  alt='profile'\r\n                  className=' hover:shadow-lg rounded-full h-10 w-10 flex items-center justify-center...'\r\n                  src={user.image}\r\n                />\r\n              </button>\r\n            </Tippy>\r\n          </Tippy>\r\n        )}\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopNavigationBar;\r\n","import React, { useState } from 'react';\r\nimport { mutate } from 'swr';\r\n\r\nconst LabelMenu = ({\r\n  menuItems,\r\n  updateNoteLabel,\r\n  note,\r\n  setElipsesClicked,\r\n\r\n  setAddOrChangeLabelClicked,\r\n  setTextAreaLabel,\r\n  setBottomMenuVisible,\r\n  status,\r\n}) => {\r\n  const [suggestions, setSuggestions] = useState();\r\n  const [showCreateLabel, setShowCreateLabel] = useState();\r\n\r\n  return (\r\n    <>\r\n      <div className='flex flex-col  border  shadow-lg bg-white  dark:bg-gray-900 w-44 rounded-md  z-50'>\r\n        <label className='px-4 text-gray-600 dark:text-gray-200'>Label note</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter label name'\r\n          className='mx-4 text-sm focus:outline-none dark:bg-gray-900 dark:placeholder-gray-200'\r\n          onChange={(event) => {\r\n            setSuggestions(event.target.value);\r\n            if (event.target.value === '') {\r\n              setShowCreateLabel(false);\r\n            }\r\n            console.log(menuItems);\r\n            if (menuItems.every((item) => !item.includes(event.target.value))) {\r\n              setShowCreateLabel(true);\r\n            }\r\n          }}\r\n        ></input>\r\n\r\n        <div className='my-2 '>\r\n          {!showCreateLabel &&\r\n            menuItems &&\r\n            menuItems.map(\r\n              (item) =>\r\n                item !== null && (\r\n                  <div className='space-x-2 cursor-pointer flex py-2 px-4 text-sm visible text-gray-600 dark:text-gray-200 dark:hover:bg-gray-700  hover:bg-gray-200 w-full'>\r\n                    <input\r\n                      type='checkbox'\r\n                      className='self-center'\r\n                      value={item}\r\n                      onClick={(event) => {\r\n                        if (event.target.checked) {\r\n                          if (note && note._id) {\r\n                            updateNoteLabel(event.target.value);\r\n                            setElipsesClicked(true);\r\n                            setAddOrChangeLabelClicked(false);\r\n                            setBottomMenuVisible(false);\r\n                            mutate('label');\r\n                            mutate(status);\r\n                          } else {\r\n                            setTextAreaLabel(event.target.value);\r\n                          }\r\n                        }\r\n                      }}\r\n                    />\r\n\r\n                    <label\r\n                      className={\r\n                        suggestions &&\r\n                        (item.includes(suggestions) || item === suggestions) &&\r\n                        'text-gray-600 font-semibold text-sm dark:text-gray-200'\r\n                      }\r\n                    >\r\n                      {item}\r\n                    </label>\r\n                  </div>\r\n                )\r\n            )}\r\n          {showCreateLabel && (\r\n            <button\r\n              className='px-4  w-full border border-t-1 \r\n                    border-r-0 border-l-0  border-b-0 text-left \r\n                    text-sm text-gray-500 dark:text-gray-200 font-medium'\r\n              onClick={() => {\r\n                if (note && note._id) {\r\n                  updateNoteLabel(suggestions);\r\n                } else {\r\n                  setTextAreaLabel(suggestions);\r\n                }\r\n\r\n                setElipsesClicked(false);\r\n                setAddOrChangeLabelClicked(false);\r\n                setBottomMenuVisible(false);\r\n                mutate('label');\r\n              }}\r\n            >\r\n              + Create\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabelMenu;\r\n","import React, { useState } from 'react';\r\nimport Menu from './Menu';\r\nimport axios from 'axios';\r\nimport { mutate } from 'swr';\r\nimport LabelMenu from './LabelMenu';\r\n\r\nimport Tippy from '@tippyjs/react/headless';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport 'tippy.js/themes/light.css';\r\n\r\nconst BottomNoteCardMenu = ({\r\n  oneNote,\r\n  setNote,\r\n  setTitle,\r\n  note,\r\n  status,\r\n  bottomMenuVisible,\r\n  setBottomMenuVisible,\r\n  textClicked,\r\n  uniqueLabel,\r\n  setTextAreaLabel,\r\n  setNoteClicked,\r\n  noteClicked,\r\n}) => {\r\n  const [ellipsesClicked, setElipsesClicked] = useState();\r\n  const [addOrChangeLabelClicked, setAddOrChangeLabelClicked] = useState();\r\n\r\n  const menuItems = [\r\n    'Delete note',\r\n    (note && note.label) || (oneNote && oneNote[0].label) ? 'Change labels' : 'Add label',\r\n    'Add drawing',\r\n    'Make a copy',\r\n    'Show checkboxes',\r\n    'Copy to Google Docs',\r\n  ];\r\n\r\n  const deleteNote = () => {\r\n    axios.delete(`/note/${note._id}`);\r\n\r\n    mutate(`${status}`);\r\n  };\r\n\r\n  const updateNoteStatus = (tag) => {\r\n    if (oneNote) {\r\n      axios.put(`/note/${oneNote[0]._id}`, {\r\n        status: tag,\r\n      });\r\n      mutate(`${status}`);\r\n    } else {\r\n      if (!note) {\r\n        return;\r\n      }\r\n      axios.put(`/note/${note._id}`, {\r\n        status: tag,\r\n      });\r\n      mutate(`${status}`);\r\n    }\r\n  };\r\n\r\n  const updateNoteLabel = (label) => {\r\n    axios.put(`/note/${note._id}`, {\r\n      label: label,\r\n    });\r\n    mutate(`${status}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          bottomMenuVisible || textClicked\r\n            ? `text-gray-800 dark:text-gray-200 visible   group-hover:visible flex  bg-white dark:bg-gray-900 justify-around pb-4 `\r\n            : `text-gray-800 dark:text-gray-200 invisible   group-hover:visible flex  bg-white justify-around dark:bg-gray-900 pb-4 `\r\n        }\r\n      >\r\n        {status === 'trash' ? (\r\n          <>\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700 px-1 text-sm rounded-sm text-white'>Delete forever</div>\r\n              )}\r\n              placement='bottom'\r\n            >\r\n              <button\r\n                className='h-10 w-10  rounded-full flex hover:bg-gray-300 items-center justify-center focus:outline-none'\r\n                onClick={deleteNote}\r\n              >\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  aria-hidden='true'\r\n                  focusable='false'\r\n                  className='h-4 w-4 fill-current text-gray-800 dark:text-gray-200'\r\n                  preserveAspectRatio='xMidYMid meet'\r\n                  viewBox='0 0 24 24'\r\n                >\r\n                  <path\r\n                    d='M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12l1.41 1.41L13.41 14l2.12 2.12l-1.41 1.41L12 15.41l-2.12 2.12l-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z'\r\n                    fill='#626262'\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </Tippy>\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700 px-1 text-sm rounded-sm text-white'>Restore</div>\r\n              )}\r\n              placement='bottom'\r\n            >\r\n              <button\r\n                className=' focus:outline-none h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center '\r\n                onClick={() => {\r\n                  updateNoteStatus('note');\r\n                }}\r\n              >\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  aria-hidden='true'\r\n                  focusable='false'\r\n                  className='h-4 w-4 fill-current text-gray-800 dark:text-gray-200'\r\n                  preserveAspectRatio='xMidYMid meet'\r\n                  viewBox='0 0 24 24'\r\n                >\r\n                  <path\r\n                    d='M14 14h2l-4-4l-4 4h2v4h4v-4M6 7h12v12c0 .5-.2 1-.61 1.39c-.39.41-.89.61-1.39.61H8c-.5 0-1-.2-1.39-.61C6.2 20 6 19.5 6 19V7m13-3v2H5V4h3.5l1-1h5l1 1H19z'\r\n                    fill='#626262'\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </Tippy>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700 px-1 text-sm rounded-sm text-white focus:outline-none'>\r\n                  Remind me\r\n                </div>\r\n              )}\r\n              placement='bottom'\r\n            >\r\n              <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center '>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  class='h-4 w-4 stroke-current text-gray-400 dark:text-gray-700'\r\n                  fill='none'\r\n                  viewBox='0 0 24 24'\r\n                  stroke='currentColor'\r\n                >\r\n                  <path\r\n                    stroke-linecap='round'\r\n                    stroke-linejoin='round'\r\n                    stroke-width='2'\r\n                    d='M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9'\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </Tippy>\r\n\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700 px-1 text-sm rounded-sm text-white focus:outline-none'>\r\n                  Collaborator\r\n                </div>\r\n              )}\r\n              placement='bottom'\r\n            >\r\n              <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  class='h-4 w-4 stroke-current text-gray-400 dark:text-gray-700'\r\n                  fill='none'\r\n                  viewBox='0 0 24 24'\r\n                  stroke='currentColor'\r\n                >\r\n                  <path\r\n                    stroke-linecap='round'\r\n                    stroke-linejoin='round'\r\n                    stroke-width='2'\r\n                    d='M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z'\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </Tippy>\r\n\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700  px-1 text-sm rounded-sm text-white focus:outline-none'>\r\n                  Change color\r\n                </div>\r\n              )}\r\n              placement='bottom'\r\n            >\r\n              <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  class='h-4 w-4 stroke-current text-gray-400 dark:text-gray-700'\r\n                  fill='none'\r\n                  viewBox='0 0 24 24'\r\n                  stroke='currentColor'\r\n                >\r\n                  <path\r\n                    stroke-linecap='round'\r\n                    stroke-linejoin='round'\r\n                    stroke-width='2'\r\n                    d='M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01'\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </Tippy>\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700  px-1 text-sm rounded-sm text-white focus:outline-none'>\r\n                  Add image\r\n                </div>\r\n              )}\r\n              placement='bottom'\r\n            >\r\n              <div className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center'>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  class='h-4 w-4 stroke-current text-gray-400 dark:text-gray-700'\r\n                  fill='none'\r\n                  viewBox='0 0 24 24'\r\n                  stroke='currentColor'\r\n                >\r\n                  <path\r\n                    stroke-linecap='round'\r\n                    stroke-linejoin='round'\r\n                    stroke-width='2'\r\n                    d='M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </Tippy>\r\n\r\n            <button\r\n              className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center '\r\n              onClick={() => {\r\n                if (status === 'note') {\r\n                  updateNoteStatus('archive');\r\n                } else {\r\n                  updateNoteStatus('note');\r\n                }\r\n              }}\r\n            >\r\n              {status === 'note' ? (\r\n                <Tippy\r\n                  render={(attrs) => (\r\n                    <div className='bg-gray-700 px-1 rounded-sm text-white text-sm focus:outline-none'>\r\n                      Archive\r\n                    </div>\r\n                  )}\r\n                  placement='bottom'\r\n                  offset={[0, 20]}\r\n                >\r\n                  <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    className='h-4 w-4 fill-current text-gray-800 dark:text-gray-200 focus:outline-none'\r\n                    viewBox='0 0 24 24'\r\n                  >\r\n                    <path d='M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.83 1H5.42l.82-1zM5 19V8h14v11H5zm11-5.5l-4 4-4-4 1.41-1.41L11 13.67V10h2v3.67l1.59-1.59L16 13.5z'></path>\r\n                  </svg>\r\n                </Tippy>\r\n              ) : (\r\n                <Tippy\r\n                  render={(attrs) => (\r\n                    <div className='bg-gray-700 px-1 rounded-sm text-white text-sm focus:outline-none'>\r\n                      Unarchive\r\n                    </div>\r\n                  )}\r\n                  placement='bottom'\r\n                  offset={[0, 20]}\r\n                >\r\n                  <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    className='h-4 w-4 fill-current text-gray-800 dark:text-gray-200 focus:outline-none'\r\n                    aria-hidden='true'\r\n                    focusable='false'\r\n                    preserveAspectRatio='xMidYMid meet'\r\n                    viewBox='0 0 24 24'\r\n                  >\r\n                    <path d='M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.83 1H5.42l.82-1zM5 19V8h14v11H5zm3-5h2.55v3h2.9v-3H16l-4-4z' />\r\n                  </svg>\r\n                </Tippy>\r\n              )}\r\n            </button>\r\n\r\n            <Tippy\r\n              render={(attrs) => (\r\n                <div className='bg-gray-700 px-1  text-sm rounded-sm text-white focus:outline-none'>\r\n                  Menu\r\n                </div>\r\n              )}\r\n              placement='bottom'\r\n            >\r\n              <Tippy\r\n                render={(attrs) =>\r\n                  addOrChangeLabelClicked ? (\r\n                    <LabelMenu\r\n                      status={status}\r\n                      menuItems={uniqueLabel}\r\n                      updateNoteLabel={updateNoteLabel}\r\n                      ellipsesClicked={ellipsesClicked}\r\n                      setElipsesClicked={setElipsesClicked}\r\n                      addOrChangeLabelClicked={addOrChangeLabelClicked}\r\n                      setAddOrChangeLabelClicked={setAddOrChangeLabelClicked}\r\n                      bottomMenuVisible={bottomMenuVisible}\r\n                      setBottomMenuVisible={setBottomMenuVisible}\r\n                      note={note}\r\n                      setTextAreaLabel={setTextAreaLabel}\r\n                    />\r\n                  ) : (\r\n                    <Menu\r\n                      noteClicked={noteClicked}\r\n                      note={note}\r\n                      setTitle={setTitle}\r\n                      setNote={setNote}\r\n                      setNoteClicked={setNoteClicked}\r\n                      bottomMenuVisible={bottomMenuVisible}\r\n                      setBottomMenuVisible={setBottomMenuVisible}\r\n                      menuItems={menuItems}\r\n                      updateNoteStatus={updateNoteStatus}\r\n                      setElipsesClicked={setElipsesClicked}\r\n                      ellipsesClicked={ellipsesClicked}\r\n                      addOrChangeLabelClicked={addOrChangeLabelClicked}\r\n                      setAddOrChangeLabelClicked={setAddOrChangeLabelClicked}\r\n                    />\r\n                  )\r\n                }\r\n                popperOptions={{\r\n                  modifiers: [\r\n                    {\r\n                      // padding: 0,\r\n                      name: 'flip',\r\n                      options: {\r\n                        fallbackPlacements: ['top', 'right'],\r\n                      },\r\n                    },\r\n                    {\r\n                      name: 'preventOverflow',\r\n                      options: {\r\n                        altAxis: true,\r\n                        tether: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                }}\r\n                // theme='light'\r\n                trigger='click'\r\n                interactive='true'\r\n                placement='bottom'\r\n                disabled={ellipsesClicked}\r\n                onHidden={() => {\r\n                  setElipsesClicked(false);\r\n                }}\r\n              >\r\n                <button\r\n                  className='h-10 w-10  rounded-full flex hover:bg-gray-300 dark:hover:bg-gray-700 items-center justify-center '\r\n                  onClick={() => {\r\n                    setBottomMenuVisible(!bottomMenuVisible);\r\n                    setAddOrChangeLabelClicked(false);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    class='h-4 w-4 stroke-current text-gray-800 dark:text-gray-200'\r\n                    fill='none'\r\n                    viewBox='0 0 24 24'\r\n                    stroke='currentColor'\r\n                  >\r\n                    <path\r\n                      stroke-linecap='round'\r\n                      stroke-linejoin='round'\r\n                      stroke-width='2'\r\n                      d='M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z'\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </Tippy>\r\n            </Tippy>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BottomNoteCardMenu;\r\n","import React from 'react';\r\nimport { mutate } from 'swr';\r\nimport BottomNoteCardMenu from './BottomNoteCardMenu';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport 'tippy.js/themes/light.css';\r\n\r\nconst NoteCard = ({ note, status, setNoteClicked, setNoteid, noteid, uniqueLabel }) => {\r\n  const [bottomMenuVisible, setBottomMenuVisible] = React.useState();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='flex flex-col  space-y-20  mt-6 ml-4  cursor-default relative  dark:bg-gray-900 '\r\n        onClick={() => {\r\n          mutate(`${noteid}`);\r\n\r\n          setNoteClicked(true);\r\n\r\n          setNoteid(note._id);\r\n        }}\r\n      >\r\n        <div className='flex flex-col self-start items-center space-y-3   cursor-default dark:bg-gray-900  '>\r\n          <div className='font-semibold truncate self-start text-gray-700  dark:text-gray-200 '>\r\n            {note.title}\r\n          </div>\r\n\r\n          <div className='text-gray-800 self-start truncate  dark:text-gray-200  '>{note.note}</div>\r\n\r\n          <div className='rounded-full self-start w-auto px-2 bg-opacity-40  bg-gray-300 text-center text-xs font-medium text-gray-700 dark:text-gray-200'>\r\n            {note.label}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <BottomNoteCardMenu\r\n        note={note}\r\n        status={status}\r\n        bottomMenuVisible={bottomMenuVisible}\r\n        setBottomMenuVisible={setBottomMenuVisible}\r\n        uniqueLabel={uniqueLabel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteCard;\r\n","export const noteSvg = (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    className='fill-current text-gray-500 dark:text-gray-200'\r\n    width='24'\r\n    height='24'\r\n    viewBox='0 0 24 24'\r\n  >\r\n    <path d='M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6A4.997 4.997 0 0 1 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z'></path>\r\n  </svg>\r\n);\r\n\r\nexport const reminderSvg = (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    className='fill-current text-gray-500 dark:text-gray-200'\r\n    width='24'\r\n    height='24'\r\n    viewBox='0 0 24 24'\r\n  >\r\n    <path d='M18 17v-6c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v6H4v2h16v-2h-2zm-2 0H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zm-4 5c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2z'></path>\r\n  </svg>\r\n);\r\n\r\nexport const archiveSvg = (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    className='fill-current text-gray-500 dark:text-gray-200'\r\n    width='24'\r\n    height='24'\r\n    viewBox='0 0 24 24'\r\n  >\r\n    <path d='M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.83 1H5.42l.82-1zM5 19V8h14v11H5zm11-5.5l-4 4-4-4 1.41-1.41L11 13.67V10h2v3.67l1.59-1.59L16 13.5z'></path>\r\n  </svg>\r\n);\r\n\r\nexport const trashSvg = (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    className='fill-current text-gray-500 dark:text-gray-200'\r\n    width='24'\r\n    height='24'\r\n    viewBox='0 0 24 24'\r\n  >\r\n    <path d='M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z'></path>\r\n    <path d='M9 8h2v9H9zm4 0h2v9h-2z'></path>\r\n  </svg>\r\n);\r\n\r\nexport const labelSvg = (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    className='fill-current text-gray-500 dark:text-gray-200'\r\n    width='24'\r\n    height='24'\r\n    viewBox='0 0 24 24'\r\n  >\r\n    <path d='M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16zM16 17H5V7h11l3.55 5L16 17z'></path>\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { mutate } from 'swr';\r\nimport { TextAreaContext } from './../../App';\r\n\r\nimport { archiveSvg, noteSvg, reminderSvg, trashSvg, labelSvg } from '../svgElements';\r\n\r\nconst SideNavigationBar = ({ userid, uniqueLabel }) => {\r\n  let { status } = useParams();\r\n  const { theme } = React.useContext(TextAreaContext);\r\n  var tabNames = ['note', 'reminders', 'archive', 'trash'];\r\n  const svgElements = [noteSvg, reminderSvg, archiveSvg, trashSvg];\r\n\r\n  return (\r\n    <>\r\n      <div className='h-screen w-1/5 flex flex-col  space-y-4 fixed inset-y-0 left-0 overflow-auto mt-16 bg-white dark:bg-gray-900'>\r\n        {tabNames.map((tabName, tabNameIndex) => {\r\n          return (\r\n            <NavLink\r\n              to={{\r\n                pathname: `/${tabName}`,\r\n                state: {\r\n                  userid: userid,\r\n                },\r\n              }}\r\n              onClick={() => {\r\n                mutate(`${status}`);\r\n              }}\r\n              activeStyle={{\r\n                fontWeight: 'bold',\r\n                backgroundColor: theme === 'dark' ? 'rgb(107,142,35)' : 'rgb(255, 222, 176)',\r\n              }}\r\n              className='flex   mt-2 space-x-8  rounded-l rounded-full py-3 px-6 hover:bg-gray-200 dark:hover:bg-gray-700 mr-2 '\r\n            >\r\n              <div>\r\n                {svgElements.map((svg, svgIndex) => {\r\n                  if (svgIndex === tabNameIndex) {\r\n                    return svg;\r\n                  } else {\r\n                    return undefined;\r\n                  }\r\n                })}\r\n              </div>\r\n              <div\r\n                className={\r\n                  tabName === 'reminders'\r\n                    ? 'text-gray-300 text-sm font-semibold tracking-wide capitalize dark:text-gray-700'\r\n                    : 'text-gray-800 text-sm font-semibold tracking-wide capitalize dark:text-gray-200'\r\n                }\r\n              >\r\n                {tabName}\r\n              </div>\r\n            </NavLink>\r\n          );\r\n        })}\r\n\r\n        {uniqueLabel &&\r\n          uniqueLabel.sort().map(\r\n            (label) =>\r\n              label !== null && (\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `/label/${label}`,\r\n                    state: {\r\n                      userid: userid,\r\n                    },\r\n                  }}\r\n                  onClick={() => {\r\n                    mutate(`${status}`);\r\n                  }}\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    backgroundColor: 'rgb(255, 222, 176)',\r\n                  }}\r\n                  className='flex  space-x-8   rounded-l rounded-full py-3 px-6 hover:bg-gray-200 dark:hover:bg-gray-700  mr-2'\r\n                >\r\n                  <div>{labelSvg}</div>\r\n                  <div className='text-gray-800 text-sm font-semibold tracking-wide dark:text-gray-200 dark:hover:bg-gray-700'>\r\n                    {label}\r\n                  </div>\r\n                </NavLink>\r\n              )\r\n          )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideNavigationBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { mutate } from 'swr';\r\nimport BottomNoteCardMenu from './BottomNoteCardMenu';\r\n\r\nconst TextArea = ({\r\n  tClicked,\r\n  oneNote,\r\n  position,\r\n  title,\r\n  setTitle,\r\n  note,\r\n  setNote,\r\n  status,\r\n  uniqueLabel,\r\n  textArealabel,\r\n  setTextAreaLabel,\r\n  noteClicked,\r\n  setNoteClicked,\r\n}) => {\r\n  let location = useLocation();\r\n\r\n  const [textClicked, setTextClicked] = useState(tClicked);\r\n  const [bottomMenuVisible, setBottomMenuVisible] = React.useState();\r\n\r\n  var dateString = oneNote && oneNote[0].updatedAt;\r\n  dateString = new Date(dateString).toUTCString();\r\n  dateString = dateString.split(' ').slice(1, 4).join(' ');\r\n\r\n  useEffect(() => {\r\n    setTitle(oneNote && oneNote[0].title);\r\n    setNote(oneNote && oneNote[0].note);\r\n  }, [oneNote, setTitle, setNote]);\r\n\r\n  return (\r\n    <>\r\n      {textClicked ? (\r\n        <>\r\n          <div\r\n            className={`${position} flex flex-col my-9  shadow-lg w-7/12 self-center rounded-md py-4 bg-white`}\r\n          >\r\n            <textarea\r\n              value={title}\r\n              placeholder='Title'\r\n              rows='4'\r\n              cols='50'\r\n              className='focus:outline-none   h-10 px-6 dark:text-gray-200 dark:bg-gray-700  dark:placeholder-gray-200 placeholder-gray-500 font-bold'\r\n              onChange={(event) => {\r\n                setTitle(event.target.value);\r\n                mutate(status);\r\n              }}\r\n            />\r\n\r\n            <textarea\r\n              value={note}\r\n              autoFocus\r\n              rows='4'\r\n              cols='50'\r\n              className='focus:outline-none    h-10 px-6 dark:placeholder-gray-200  placeholder-gray-500 font-semibold dark:text-gray-200 dark:bg-gray-700'\r\n              placeholder='Take a note...'\r\n              onChange={(event) => {\r\n                setNote(event.target.value);\r\n                mutate(status);\r\n              }}\r\n            />\r\n\r\n            {noteClicked && oneNote ? (\r\n              <div className='ml-6 rounded-full w-20 bg-opacity-40  bg-gray-300 text-center text-xs font-medium text-gray-700 dark:text-gray-200'>\r\n                {oneNote[0].label}\r\n              </div>\r\n            ) : (\r\n              <div className='ml-6 rounded-full w-20 bg-opacity-40  bg-gray-300 text-center text-xs font-medium text-gray-700 dark:text-gray-200'>\r\n                {textArealabel}\r\n              </div>\r\n            )}\r\n            {!noteClicked && (\r\n              <div className='flex justify-around'>\r\n                <button\r\n                  className='bg-blue-500 focus:outline-none text-blue-50 border font-semibold rounded-md px-2 text-sm hover:shadow-md'\r\n                  onClick={() => {\r\n                    axios.post('/note', {\r\n                      userid: location.state.userid,\r\n                      title: title,\r\n                      note: note,\r\n                      label: textArealabel,\r\n                    });\r\n\r\n                    mutate(status);\r\n                    setTitle();\r\n                    setNote();\r\n                    setTextAreaLabel();\r\n                    setTextClicked(false);\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setTitle();\r\n                    setNote();\r\n                    setTextAreaLabel();\r\n                    setTextClicked(false);\r\n                  }}\r\n                  className=' focus:outline-none text-gray-800 font-semibold dark:text-blue-50 px-2  rounded-md text-sm border hover:shadow-md'\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {noteClicked && <div className='flex justify-center'>{dateString}</div>}\r\n            <BottomNoteCardMenu\r\n              noteClicked={noteClicked}\r\n              oneNote={oneNote}\r\n              note={note}\r\n              setNote={setNote}\r\n              setTitle={setTitle}\r\n              textClicked={textClicked}\r\n              bottomMenuVisible={bottomMenuVisible}\r\n              setBottomMenuVisible={setBottomMenuVisible}\r\n              uniqueLabel={uniqueLabel}\r\n              setTextAreaLabel={setTextAreaLabel}\r\n              setNoteClicked={setNoteClicked}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <input\r\n          className='focus:outline-none my-2 rounded-md bg-white shadow-lg  h-10 p-6 self-center w-6/12 placeholder-gray-500  dark:placeholder-gray-200  dark:text-gray-200 dark:bg-gray-700'\r\n          placeholder='Take a note...'\r\n          autoFocus\r\n          onClick={() => {\r\n            setTextClicked(true);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React, { useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport useSWR, { mutate } from 'swr';\r\nimport 'tailwindcss/tailwind.css';\r\nimport TopNavigationBar from './header/TopNavigationBar';\r\nimport NoteCard from './NoteCard';\r\nimport SideNavigationBar from './side/SideNavigationBar';\r\nimport TextArea from './TextArea';\r\nimport { TextAreaContext } from '../App';\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nconst Notes = () => {\r\n  let location = useLocation();\r\n  let { status } = useParams();\r\n  const [noteClicked, setNoteClicked] = React.useState();\r\n  const [noteid, setNoteid] = React.useState();\r\n  const [title, setTitle] = useState();\r\n  const [note, setNote] = useState();\r\n  const [user, setUser] = React.useState({\r\n    name: location.state.name,\r\n    email: location.state.email,\r\n    image: location.state.image,\r\n  });\r\n\r\n  const [textArealabel, setTextAreaLabel] = useState();\r\n\r\n  const { list, sideNavigationBarVisible } = React.useContext(TextAreaContext);\r\n\r\n  //notes\r\n  const fetcher = () => {\r\n    return axios.get(`/note/${location.state.userid}/${status}`).then((res) => res.data);\r\n  };\r\n\r\n  const { data: notes } = useSWR(`${status}`, fetcher, { refreshInterval: 1000 });\r\n\r\n  //update notes\r\n  const notefetcher = () => {\r\n    return axios.get(`/onenote/${location.state.userid}/${noteid}`).then((res) => res.data);\r\n  };\r\n\r\n  const { data: oneNote } = useSWR(noteid ? `${noteid}` : null, notefetcher);\r\n\r\n  //all labels\r\n  const labelFetcher = () => axios.get(`/label/${location.state.userid}`).then((res) => res.data);\r\n\r\n  const { data: label } = useSWR(`label`, labelFetcher);\r\n\r\n  let [uniqueLabel, setUniqueLabel] = useState();\r\n\r\n  React.useEffect(() => {\r\n    if (label) {\r\n      setUniqueLabel([...new Set(label.filter(Boolean))]);\r\n    }\r\n  }, [label]);\r\n\r\n  return (\r\n    <>\r\n      <UserContext.Provider\r\n        value={{\r\n          user,\r\n        }}\r\n      >\r\n        <div className='relative z-20  '>\r\n          <TopNavigationBar status={status} />\r\n          <div className='flex '>\r\n            {sideNavigationBarVisible && (\r\n              <SideNavigationBar userid={location.state.userid} uniqueLabel={uniqueLabel} />\r\n            )}\r\n\r\n            <div className='flex flex-col  z-30 mt-16 h-screen w-4/5 inset-y-0 right-0 absolute bg-white dark:bg-gray-900 '>\r\n              <TextArea\r\n                setNoteClicked={setNoteClicked}\r\n                noteClicked={noteClicked}\r\n                title={title}\r\n                setTitle={setTitle}\r\n                note={note}\r\n                setNote={setNote}\r\n                status={status}\r\n                uniqueLabel={uniqueLabel}\r\n                textArealabel={textArealabel}\r\n                setTextAreaLabel={setTextAreaLabel}\r\n              />\r\n\r\n              {(location.pathname === `/${status}` || location.pathname === `/label/${status}`) && (\r\n                <div className=' '>\r\n                  <div\r\n                    className={\r\n                      list\r\n                        ? 'flex flex-col space-y-4 py-8 px-40 '\r\n                        : 'grid grid-cols-2 md:grid-cols-4 lg:grid-cols-4 gap-4 p-8 '\r\n                    }\r\n                  >\r\n                    {notes &&\r\n                      notes.map((note, noteIndex) => (\r\n                        <>\r\n                          <div className='border border-gray-200  group rounded-md  hover:shadow-lg  w-auto  '>\r\n                            <NoteCard\r\n                              noteIndex={noteIndex}\r\n                              note={note}\r\n                              status={status}\r\n                              setNoteClicked={setNoteClicked}\r\n                              setNoteid={setNoteid}\r\n                              noteid={noteid}\r\n                              uniqueLabel={uniqueLabel}\r\n                            />\r\n                          </div>\r\n                        </>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {noteClicked && (\r\n          <>\r\n            <div className='absolute z-40 bg-opacity-40 bg-gray-800 inset-0 flex justify-center items-center'>\r\n              <div\r\n                className=' w-full h-full relative'\r\n                onClick={() => {\r\n                  setNoteClicked(false);\r\n                  axios.put(`/note/${noteid}`, {\r\n                    userid: location.state.userid,\r\n                    title: title,\r\n                    note: note,\r\n                    label: textArealabel,\r\n                  });\r\n                  setTitle();\r\n                  setNote();\r\n                  setTextAreaLabel();\r\n                  mutate(`${status}`);\r\n                }}\r\n              ></div>\r\n              <TextArea\r\n                setNoteClicked={setNoteClicked}\r\n                noteClicked={noteClicked}\r\n                status={status}\r\n                tClicked='true'\r\n                oneNote={oneNote}\r\n                position='absolute'\r\n                title={title}\r\n                setTitle={setTitle}\r\n                note={note}\r\n                setNote={setNote}\r\n                textArealabel={textArealabel}\r\n                setTextAreaLabel={setTextAreaLabel}\r\n                uniqueLabel={uniqueLabel}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </UserContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from './../../src/components/Login';\r\nimport Notes from './../../src/components/Notes';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      <Router basename='/app'>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Login />\r\n          </Route>\r\n          <Route exact path='/:status'>\r\n            <Notes />\r\n          </Route>\r\n          <Route exact path='/label/:status'>\r\n            <Notes />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './../src/routes/Routes';\n\nexport const TextAreaContext = React.createContext();\n\nfunction App() {\n  const [textAreaClicked, setTextAreaClicked] = React.useState();\n  const [theme, setTheme] = React.useState();\n  const [list, setList] = React.useState();\n  const [sideNavigationBarVisible, setSideNavigationBarVisible] = React.useState(true);\n\n  return (\n    <div className={`App ${theme} dark:bg-gray-900`}>\n      <TextAreaContext.Provider\n        value={{\n          textAreaClicked,\n          setTextAreaClicked,\n          theme,\n          setTheme,\n          list,\n          setList,\n          sideNavigationBarVisible,\n          setSideNavigationBarVisible,\n        }}\n      >\n        <Routes />\n      </TextAreaContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/tailwind.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}